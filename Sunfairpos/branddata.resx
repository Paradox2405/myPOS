<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAASLSURBVFhHxVZbb0xRFPYP/ACJROLVkxelVSl1N5RWaV1KaF0joSTiiUd/gUiEUH4DaauNceuM
        OXM5c05n5szU6IN4kKBJkybL921nj3PZQ5/Gw5czZ+211vftvddac1aIyH+F0dhKGI2thNHYShiNGi86
        OlYCPcBq0/rfwBg/dqVpXcNoJBC4Bqhlbt0SPBeBAZOfCfRljB9bA9aa/AijEQEkr3sPH8qPVEq+Tk8z
        0RLQb/IPgj70ZczPTEaqjx8ztg6sMfnHDHRkQOXePanevCn2wYNSuXxZPj99qkX0RmM0uEaf+WfPZG50
        VErHjsnnO3eEuZgTiIkIvcCBd15T5DduiN3TI/aBA1LEs3Lxosz/RQRtXCN5DeRlkJePH5fyiRNSv31b
        KvfvM5bXEaqJaJJE+upV8a5fV8T2/v2KvIhTcA4dUicxPzbGRKyJhgj+pm3++XOpIVYR++TqefKk1HES
        6WvXGJsIcjZ+EFhcy0Q5qC+NjDR2rwU4fX3iXbki3CX9AFY58YccpBUCpBq8juLwsI4JFWRIAAEHVvCS
        EnHunBKgyHt7xYUA9/BhqeGU/OtgwkWeyhyuTJFr4qEhBdodbIY5mTvKF3rRoCMD8jy+8+f/CAC5298v
        s0eOKBHsECJE7hMTn/5BTsQMGghQ7ZSDiMqFC+r4GwKOHpXSwICUSXTqlLrnxrHD5sEWIW/avkajBgJV
        ZeeZ/NIlJWA2IKA0ONio9uDuI+RN25YwGoPwRSzmQeChC2ICeE2B3QfIQ53SDEZjFFoEZ4ESgBoo6Wvw
        T0FdAQRwBiyXnDAao0CybmBB1QLrQF9FVAhE1H73+gJjTLmiMBqDQKIuJswhuQcBRQwnB/PBwWxw/dac
        9QWVIWgOAuyzZ7WITlPOIIxGDSZgok/4Q2ER5nfulMKuXVLcs0eKe/eKs2+fOBDkQpDLecGBBXAgMWY5
        IoxGQpPPPXqkpmK2s1OyXV2S27pVCtu2id3dLTbF7N4tRTwdwMbvPMTl8CxjTtSfPNEi2k0chNHIAEWO
        XRTPnJF0W5tYmzaJ1d4u2Y4OJcYbHhEPp1JFZ1QxrPIQlIMwC88U8A6/C1gPnIRRRMwAx/XA9xq+BSwM
        lDcbNsjMxo3ykQJAboG8grmeRfv5iRdUi0KEBVKSv8czidOaAlI4PW6EOYF1Ub7QCwGnl9UHD+QDkr7C
        jpObN8v7LVskjWQWjr9McrSdT84CVR3CImWXfMBVJHfskKnt22UcQl4iZgYivN/fBGNRvtALAaepDNoq
        j56eBOk0krxBshQSl0BuYY2EQFcgptEpZcyKZCIhk6iFcdTCJArVhbAZdAl87ga5iNALASfe/6KF/s6e
        Pi2T2M1rkLvYRQY2EgGxyoZNieDVuKiLCYgYB2yQp9GmWLOA2Adq6EUDjglgKYfhksWuCujrDHqcBEDT
        iuYafXhFDogL+Dv3RfNzbJUpJmbQQMBAEkfI74KPGDZ4ZxE1JdegD315jRY2gN/fgFjxaRiNGggcAr4A
        b4H1Jh8T6AtMAFNAm8lHw2hsJYzGVsJobB1kxS9YfdVjlJ9IjAAAAABJRU5ErkJggg==
</value>
  </data>
</root>